# -*- coding: utf-8 -*-
"""Data Analysis Using Python For IPL DATA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u0Z1D9STs1SQ9on3jgLF1SoOdKy7_Sso

Loading the required Libraries
"""

import pandas as pd
from matplotlib import pyplot as plt
import seaborn as sns

"""Loading the ipl matches dataset"""

ipl=pd.read_csv('matches.csv')

"""Having a glance at the first five records of the dataset"""

ipl.head()

"""look in at the number of rows and columns in the dataset"""

ipl.shape

"""Getting the frequency of most man of the match awards"""

ipl['player_of_match'].value_counts()

"""Getting the top 10 players with most man of the match awards"""

ipl['player_of_match'].value_counts()[0:10]

"""Getting the top5 players with most man of the match awards"""

ipl['player_of_match'].value_counts()[0:5]

list(ipl['player_of_match'].value_counts()[0:5].keys())

"""making a bar-plot for the top 5 players with most man of the match awards"""

plt.figure(figsize=(8,5))
plt.bar(list(ipl['player_of_match'].value_counts()[0:5].keys()),list(ipl['player_of_match'].value_counts()[0:5]),color="g")

"""Getting the frequency of result column"""

ipl['result'].value_counts()

"""Finding out the number of toss wins w.r.t each team"""

ipl['toss_winner'].value_counts()

"""Extracting the records where a team won batting first"""

batting_first=ipl[ipl['win_by_runs']!=0]

"""looking at the head"""

batting_first.head()

"""making a histogram"""

plt.figure(figsize=(7,7))
plt.hist(batting_first['win_by_runs'])
plt.title("Distribution of Runs by which Team Won")
plt.xlabel("Runs")
plt.ylabel("Frequency")
plt.show()

"""Finding out the number of wins w.r.t each team after batting first"""

batting_first['winner'].value_counts()

"""Making a bar-plot for top3 teams with most wins after batting first"""

plt.figure(figsize=(7,7))
plt.bar(list(batting_first['winner'].value_counts()[0:3].keys()),list(batting_first['winner'].value_counts()[0:3]),color=["blue","yellow","orange"])

"""Making a Pie chart"""

plt.figure(figsize=(7,7))
plt.pie(list(batting_first['winner'].value_counts()),labels=list(batting_first['winner'].value_counts().keys()))
plt.show()

"""Extracting those records where a team has won after batting second"""

batting_second=ipl[ipl['win_by_wickets']!=0]

"""looking at the head"""

batting_second.head()

"""Making a histogram for frequency of wins w.r,t number of wickets"""

plt.figure(figsize=(7,7))
plt.hist(batting_second['win_by_wickets'],bins=30)
plt.show()

"""Finding out the frequency   of number of wins w.r.t each time after time batting second"""

batting_second['winner'].value_counts()

"""Making a bar plot for top 3 teams with most wins after batting second"""

plt.figure(figsize=(7,7))
plt.bar(list(batting_second['winner'].value_counts()[0:3].keys()),list(batting_second['winner'].value_counts()[0:3]),color=["purple","blue","red"])
plt.show()

"""Making a pie chart for distribution of most wins after batting second"""

plt.figure(figsize=(7,7))
plt.pie(list(batting_second['winner'].value_counts()),labels=list(batting_second['winner'].value_counts().keys()),autopct='%0.1f%%')
plt.show()

"""Looking at the number of matches played each season"""

ipl['season'].value_counts()

"""Looking at the number of matches played in each city"""

ipl['city'].value_counts()

"""Finding ouut how many times a team has won the match after wining the toss"""

import numpy as np
np.sum(ipl['toss_winner']==ipl['winner'])

325/636